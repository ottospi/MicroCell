{"ast":null,"code":"/**\n * Check if the provided file type should be accepted by the input with accept attribute.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input#attr-accept\n *\n * Inspired by https://github.com/enyo/dropzone\n *\n * @param file {File} https://developer.mozilla.org/en-US/docs/Web/API/File\n * @param acceptedFiles {string}\n * @returns {boolean}\n */\nexport default function (file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    const fileName = file.name || '';\n    const mimeType = file.type || '';\n    const baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(type => {\n      const validType = type.trim();\n\n      if (validType.charAt(0) === '.') {\n        return fileName.toLowerCase().endsWith(validType.toLowerCase());\n      } else if (validType.endsWith('/*')) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n\n      return mimeType === validType;\n    });\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/ottospigariol/Documents/MicroCell/node_modules/attr-accept/src/index.js"],"names":["file","acceptedFiles","acceptedFilesArray","Array","isArray","split","fileName","name","mimeType","type","baseMimeType","replace","some","validType","trim","charAt","toLowerCase","endsWith"],"mappings":"AAAA;;;;;;;;;;AAWA,eAAe,UAASA,IAAT,EAAeC,aAAf,EAA8B;AAC3C,MAAID,IAAI,IAAIC,aAAZ,EAA2B;AACzB,UAAMC,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,aAAd,IACvBA,aADuB,GAEvBA,aAAa,CAACI,KAAd,CAAoB,GAApB,CAFJ;AAGA,UAAMC,QAAQ,GAAGN,IAAI,CAACO,IAAL,IAAa,EAA9B;AACA,UAAMC,QAAQ,GAAGR,IAAI,CAACS,IAAL,IAAa,EAA9B;AACA,UAAMC,YAAY,GAAGF,QAAQ,CAACG,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAArB;AAEA,WAAOT,kBAAkB,CAACU,IAAnB,CAAwBH,IAAI,IAAI;AACrC,YAAMI,SAAS,GAAGJ,IAAI,CAACK,IAAL,EAAlB;;AACA,UAAID,SAAS,CAACE,MAAV,CAAiB,CAAjB,MAAwB,GAA5B,EAAiC;AAC/B,eAAOT,QAAQ,CAACU,WAAT,GAAuBC,QAAvB,CAAgCJ,SAAS,CAACG,WAAV,EAAhC,CAAP;AACD,OAFD,MAEO,IAAIH,SAAS,CAACI,QAAV,CAAmB,IAAnB,CAAJ,EAA8B;AACnC;AACA,eAAOP,YAAY,KAAKG,SAAS,CAACF,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,CAAxB;AACD;;AACD,aAAOH,QAAQ,KAAKK,SAApB;AACD,KATM,CAAP;AAUD;;AACD,SAAO,IAAP;AACD","sourcesContent":["/**\n * Check if the provided file type should be accepted by the input with accept attribute.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input#attr-accept\n *\n * Inspired by https://github.com/enyo/dropzone\n *\n * @param file {File} https://developer.mozilla.org/en-US/docs/Web/API/File\n * @param acceptedFiles {string}\n * @returns {boolean}\n */\n\nexport default function(file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    const acceptedFilesArray = Array.isArray(acceptedFiles)\n      ? acceptedFiles\n      : acceptedFiles.split(',')\n    const fileName = file.name || ''\n    const mimeType = file.type || ''\n    const baseMimeType = mimeType.replace(/\\/.*$/, '')\n\n    return acceptedFilesArray.some(type => {\n      const validType = type.trim()\n      if (validType.charAt(0) === '.') {\n        return fileName.toLowerCase().endsWith(validType.toLowerCase())\n      } else if (validType.endsWith('/*')) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '')\n      }\n      return mimeType === validType\n    })\n  }\n  return true\n}\n"]},"metadata":{},"sourceType":"module"}